/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.davidbuzatto.computersupportedclasshelper.gui;

import br.com.davidbuzatto.computersupportedclasshelper.gui.geom.Curve;
import br.com.davidbuzatto.computersupportedclasshelper.gui.geom.Ellipse;
import br.com.davidbuzatto.computersupportedclasshelper.gui.geom.Line;
import br.com.davidbuzatto.computersupportedclasshelper.gui.geom.Polygon;
import br.com.davidbuzatto.computersupportedclasshelper.gui.geom.Rectangle;
import br.com.davidbuzatto.computersupportedclasshelper.gui.geom.RoundRectangle;
import br.com.davidbuzatto.computersupportedclasshelper.gui.geom.Shape;
import br.com.davidbuzatto.computersupportedclasshelper.gui.geom.Star;
import br.com.davidbuzatto.computersupportedclasshelper.utils.Constants;
import br.com.davidbuzatto.computersupportedclasshelper.utils.DrawingConfigs;
import java.awt.AWTException;
import java.awt.Color;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.Point;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.List;
import java.util.ListIterator;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author David
 */
public class MainWindow extends javax.swing.JFrame {

    private DrawingConfigs dConfig;
    
    private boolean drawing;
    private Shape currentShape;
    private Shape selectedShape;
    
    private double xPressed;
    private double yPressed;
    private double xPrev;
    private double yPrev;
    
    /**
     * Creates new form MainWindowa
     */
    public MainWindow() {
        
        initComponents();
        setBackground( new Color( 0, 0, 0, 0 ) );
        
        dConfig = DrawingConfigs.getInstance();
        drawPanel.setCursor( Cursors.getCursor( Cursors.Type.PENCIL ) );
        
        KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
        manager.addKeyEventDispatcher( new ApplicationKeyEventDispatcher( this ) );
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        popupMenuNoColor = new javax.swing.JPopupMenu();
        menuItemNoColor = new javax.swing.JMenuItem();
        drawPanel = new br.com.davidbuzatto.computersupportedclasshelper.gui.DrawPanel();
        mainToolBar = new ToolBar( ToolBar.Side.LEFT );
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5));
        btnNew = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        btnPrintScreen = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnUndo = new javax.swing.JButton();
        btnRedo = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnPencil = new javax.swing.JToggleButton();
        btnLine = new javax.swing.JToggleButton();
        btnRectangle = new javax.swing.JToggleButton();
        btnRoundRectangle = new javax.swing.JToggleButton();
        btnEllipse = new javax.swing.JToggleButton();
        btnPolygon = new javax.swing.JToggleButton();
        btnStar = new javax.swing.JToggleButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnMove = new javax.swing.JToggleButton();
        btnChangeFill = new javax.swing.JToggleButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnClean = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5));
        colorPanelStroke = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5));
        colorPanelFill = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5));
        jSeparator5 = new javax.swing.JToolBar.Separator();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5));
        colorPanelBackground = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5));
        jSeparator6 = new javax.swing.JToolBar.Separator();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 20), new java.awt.Dimension(5, 20), new java.awt.Dimension(5, 20));
        jSeparator7 = new javax.swing.JToolBar.Separator();
        btnHelp = new javax.swing.JButton();
        btnConfigs = new javax.swing.JButton();
        btnQuit = new javax.swing.JButton();
        paletteToolBar = new ToolBar( ToolBar.Side.RIGHT );
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5), new java.awt.Dimension(5, 5));
        btnPalette = new javax.swing.JButton();
        panelC1 = new javax.swing.JPanel();
        colorPanelSC1 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        colorPanelFC1 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        panelC2 = new javax.swing.JPanel();
        colorPanelSC2 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        colorPanelFC2 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        panelC3 = new javax.swing.JPanel();
        colorPanelSC3 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        colorPanelFC3 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        panelC4 = new javax.swing.JPanel();
        colorPanelSC4 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        colorPanelFC4 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        panelC5 = new javax.swing.JPanel();
        colorPanelSC5 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        colorPanelFC5 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        panelC6 = new javax.swing.JPanel();
        colorPanelSC6 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        colorPanelFC6 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        panelC7 = new javax.swing.JPanel();
        colorPanelSC7 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        colorPanelFC7 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        panelC8 = new javax.swing.JPanel();
        colorPanelSC8 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();
        colorPanelFC8 = new br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel();

        menuItemNoColor.setText("no color");
        menuItemNoColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemNoColorActionPerformed(evt);
            }
        });
        popupMenuNoColor.add(menuItemNoColor);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Video Lesson Assistant");
        setAlwaysOnTop(true);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setUndecorated(true);

        drawPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                drawPanelMouseDragged(evt);
            }
        });
        drawPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                drawPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                drawPanelMouseReleased(evt);
            }
        });

        mainToolBar.setFloatable(false);
        mainToolBar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        mainToolBar.setRollover(true);
        mainToolBar.setBorderPainted(false);
        mainToolBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mainToolBar.add(filler1);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/folder_add.png"))); // NOI18N
        btnNew.setToolTipText("new");
        btnNew.setFocusPainted(false);
        btnNew.setFocusable(false);
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        mainToolBar.add(btnNew);

        btnOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/folder_edit.png"))); // NOI18N
        btnOpen.setToolTipText("open");
        btnOpen.setFocusPainted(false);
        btnOpen.setFocusable(false);
        btnOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });
        mainToolBar.add(btnOpen);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/disk.png"))); // NOI18N
        btnSave.setToolTipText("save");
        btnSave.setFocusPainted(false);
        btnSave.setFocusable(false);
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        mainToolBar.add(btnSave);
        mainToolBar.add(jSeparator9);

        btnPrintScreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/picture.png"))); // NOI18N
        btnPrintScreen.setToolTipText("print screen");
        btnPrintScreen.setFocusPainted(false);
        btnPrintScreen.setFocusable(false);
        btnPrintScreen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrintScreen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPrintScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintScreenActionPerformed(evt);
            }
        });
        mainToolBar.add(btnPrintScreen);
        mainToolBar.add(jSeparator1);

        btnUndo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/arrow_undo.png"))); // NOI18N
        btnUndo.setToolTipText("undo");
        btnUndo.setEnabled(false);
        btnUndo.setFocusPainted(false);
        btnUndo.setFocusable(false);
        btnUndo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUndo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoActionPerformed(evt);
            }
        });
        mainToolBar.add(btnUndo);

        btnRedo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/arrow_redo.png"))); // NOI18N
        btnRedo.setToolTipText("redo");
        btnRedo.setEnabled(false);
        btnRedo.setFocusPainted(false);
        btnRedo.setFocusable(false);
        btnRedo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRedo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedoActionPerformed(evt);
            }
        });
        mainToolBar.add(btnRedo);
        mainToolBar.add(jSeparator2);

        buttonGroup.add(btnPencil);
        btnPencil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/pencil.png"))); // NOI18N
        btnPencil.setSelected(true);
        btnPencil.setToolTipText("pencil");
        btnPencil.setFocusPainted(false);
        btnPencil.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPencil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnPencilMouseReleased(evt);
            }
        });
        btnPencil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPencilActionPerformed(evt);
            }
        });
        mainToolBar.add(btnPencil);

        buttonGroup.add(btnLine);
        btnLine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/line.png"))); // NOI18N
        btnLine.setToolTipText("line");
        btnLine.setFocusPainted(false);
        btnLine.setFocusable(false);
        btnLine.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnLineMouseReleased(evt);
            }
        });
        btnLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLineActionPerformed(evt);
            }
        });
        mainToolBar.add(btnLine);

        buttonGroup.add(btnRectangle);
        btnRectangle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/retangle.png"))); // NOI18N
        btnRectangle.setToolTipText("rectangle");
        btnRectangle.setFocusPainted(false);
        btnRectangle.setFocusable(false);
        btnRectangle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRectangle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnRectangleMouseReleased(evt);
            }
        });
        btnRectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRectangleActionPerformed(evt);
            }
        });
        mainToolBar.add(btnRectangle);

        buttonGroup.add(btnRoundRectangle);
        btnRoundRectangle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/roundRectangle.png"))); // NOI18N
        btnRoundRectangle.setToolTipText("round rectangle");
        btnRoundRectangle.setFocusPainted(false);
        btnRoundRectangle.setFocusable(false);
        btnRoundRectangle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRoundRectangle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnRoundRectangleMouseReleased(evt);
            }
        });
        btnRoundRectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRoundRectangleActionPerformed(evt);
            }
        });
        mainToolBar.add(btnRoundRectangle);

        buttonGroup.add(btnEllipse);
        btnEllipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/ellipse.png"))); // NOI18N
        btnEllipse.setToolTipText("ellipse");
        btnEllipse.setFocusPainted(false);
        btnEllipse.setFocusable(false);
        btnEllipse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEllipse.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEllipse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnEllipseMouseReleased(evt);
            }
        });
        btnEllipse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEllipseActionPerformed(evt);
            }
        });
        mainToolBar.add(btnEllipse);

        buttonGroup.add(btnPolygon);
        btnPolygon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/polygon.png"))); // NOI18N
        btnPolygon.setToolTipText("polygon");
        btnPolygon.setFocusPainted(false);
        btnPolygon.setFocusable(false);
        btnPolygon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPolygon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnPolygonMouseReleased(evt);
            }
        });
        btnPolygon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPolygonActionPerformed(evt);
            }
        });
        mainToolBar.add(btnPolygon);

        buttonGroup.add(btnStar);
        btnStar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/star.png"))); // NOI18N
        btnStar.setToolTipText("star");
        btnStar.setFocusPainted(false);
        btnStar.setFocusable(false);
        btnStar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnStarMouseReleased(evt);
            }
        });
        btnStar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStarActionPerformed(evt);
            }
        });
        mainToolBar.add(btnStar);
        mainToolBar.add(jSeparator3);

        buttonGroup.add(btnMove);
        btnMove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/cursor_openhand.png"))); // NOI18N
        btnMove.setToolTipText("move");
        btnMove.setFocusPainted(false);
        btnMove.setFocusable(false);
        btnMove.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveActionPerformed(evt);
            }
        });
        mainToolBar.add(btnMove);

        buttonGroup.add(btnChangeFill);
        btnChangeFill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/bucket.png"))); // NOI18N
        btnChangeFill.setToolTipText("change fill");
        btnChangeFill.setFocusPainted(false);
        btnChangeFill.setFocusable(false);
        btnChangeFill.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnChangeFill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeFillActionPerformed(evt);
            }
        });
        mainToolBar.add(btnChangeFill);
        mainToolBar.add(jSeparator8);

        btnClean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/delete.png"))); // NOI18N
        btnClean.setToolTipText("clear current draw page");
        btnClean.setFocusPainted(false);
        btnClean.setFocusable(false);
        btnClean.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClean.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });
        mainToolBar.add(btnClean);
        mainToolBar.add(jSeparator4);
        mainToolBar.add(filler2);

        colorPanelStroke.setToolTipText("stroke color");
        colorPanelStroke.setAlignmentX(0.0F);
        colorPanelStroke.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelStrokeMousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelStrokeLayout = new javax.swing.GroupLayout(colorPanelStroke);
        colorPanelStroke.setLayout(colorPanelStrokeLayout);
        colorPanelStrokeLayout.setHorizontalGroup(
            colorPanelStrokeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelStrokeLayout.setVerticalGroup(
            colorPanelStrokeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        mainToolBar.add(colorPanelStroke);
        mainToolBar.add(filler3);

        colorPanelFill.setToolTipText("fill color");
        colorPanelFill.setAlignmentX(0.0F);
        colorPanelFill.setColor(null);
        colorPanelFill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelFillMousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelFillLayout = new javax.swing.GroupLayout(colorPanelFill);
        colorPanelFill.setLayout(colorPanelFillLayout);
        colorPanelFillLayout.setHorizontalGroup(
            colorPanelFillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelFillLayout.setVerticalGroup(
            colorPanelFillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        mainToolBar.add(colorPanelFill);
        mainToolBar.add(filler4);
        mainToolBar.add(jSeparator5);
        mainToolBar.add(filler6);

        colorPanelBackground.setToolTipText("background color");
        colorPanelBackground.setAlignmentX(0.0F);
        colorPanelBackground.setColor(null);
        colorPanelBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelBackgroundMousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelBackgroundLayout = new javax.swing.GroupLayout(colorPanelBackground);
        colorPanelBackground.setLayout(colorPanelBackgroundLayout);
        colorPanelBackgroundLayout.setHorizontalGroup(
            colorPanelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelBackgroundLayout.setVerticalGroup(
            colorPanelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        mainToolBar.add(colorPanelBackground);
        mainToolBar.add(filler7);
        mainToolBar.add(jSeparator6);
        mainToolBar.add(filler5);
        mainToolBar.add(jSeparator7);

        btnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/help.png"))); // NOI18N
        btnHelp.setToolTipText("help and about");
        btnHelp.setFocusPainted(false);
        btnHelp.setFocusable(false);
        btnHelp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHelp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });
        mainToolBar.add(btnHelp);

        btnConfigs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/cog.png"))); // NOI18N
        btnConfigs.setToolTipText("configuration");
        btnConfigs.setFocusPainted(false);
        btnConfigs.setFocusable(false);
        btnConfigs.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnConfigs.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnConfigs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfigsActionPerformed(evt);
            }
        });
        mainToolBar.add(btnConfigs);

        btnQuit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/cancel.png"))); // NOI18N
        btnQuit.setToolTipText("quit");
        btnQuit.setFocusPainted(false);
        btnQuit.setFocusable(false);
        btnQuit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnQuit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });
        mainToolBar.add(btnQuit);

        paletteToolBar.setFloatable(false);
        paletteToolBar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        paletteToolBar.setRollover(true);
        paletteToolBar.setAlignmentX(0.15151516F);
        paletteToolBar.setBorderPainted(false);
        paletteToolBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        paletteToolBar.add(filler8);

        btnPalette.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/computersupportedclasshelper/gui/icons/palette.png"))); // NOI18N
        btnPalette.setToolTipText("new");
        btnPalette.setFocusPainted(false);
        btnPalette.setFocusable(false);
        btnPalette.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPalette.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPalette.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaletteActionPerformed(evt);
            }
        });
        paletteToolBar.add(btnPalette);

        panelC1.setMaximumSize(new java.awt.Dimension(60, 30));
        panelC1.setMinimumSize(new java.awt.Dimension(60, 30));
        panelC1.setName(""); // NOI18N
        panelC1.setOpaque(false);
        panelC1.setPreferredSize(new java.awt.Dimension(60, 30));

        colorPanelSC1.setToolTipText("stroke color 1");
        colorPanelSC1.setAlignmentX(0.0F);
        colorPanelSC1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelSC1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelSC1Layout = new javax.swing.GroupLayout(colorPanelSC1);
        colorPanelSC1.setLayout(colorPanelSC1Layout);
        colorPanelSC1Layout.setHorizontalGroup(
            colorPanelSC1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelSC1Layout.setVerticalGroup(
            colorPanelSC1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC1.add(colorPanelSC1);

        colorPanelFC1.setToolTipText("fill color 1");
        colorPanelFC1.setAlignmentX(0.0F);
        colorPanelFC1.setColor(null);
        colorPanelFC1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelFC1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelFC1Layout = new javax.swing.GroupLayout(colorPanelFC1);
        colorPanelFC1.setLayout(colorPanelFC1Layout);
        colorPanelFC1Layout.setHorizontalGroup(
            colorPanelFC1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelFC1Layout.setVerticalGroup(
            colorPanelFC1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC1.add(colorPanelFC1);

        paletteToolBar.add(panelC1);

        panelC2.setMaximumSize(new java.awt.Dimension(60, 30));
        panelC2.setMinimumSize(new java.awt.Dimension(60, 30));
        panelC2.setName(""); // NOI18N
        panelC2.setOpaque(false);
        panelC2.setPreferredSize(new java.awt.Dimension(60, 30));

        colorPanelSC2.setToolTipText("stroke color 2");
        colorPanelSC2.setAlignmentX(0.0F);
        colorPanelSC2.setColor(new java.awt.Color(255, 255, 255));
        colorPanelSC2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelSC2MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelSC2Layout = new javax.swing.GroupLayout(colorPanelSC2);
        colorPanelSC2.setLayout(colorPanelSC2Layout);
        colorPanelSC2Layout.setHorizontalGroup(
            colorPanelSC2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelSC2Layout.setVerticalGroup(
            colorPanelSC2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC2.add(colorPanelSC2);

        colorPanelFC2.setToolTipText("fill color 2");
        colorPanelFC2.setAlignmentX(0.0F);
        colorPanelFC2.setColor(null);
        colorPanelFC2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelFC2MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelFC2Layout = new javax.swing.GroupLayout(colorPanelFC2);
        colorPanelFC2.setLayout(colorPanelFC2Layout);
        colorPanelFC2Layout.setHorizontalGroup(
            colorPanelFC2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelFC2Layout.setVerticalGroup(
            colorPanelFC2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC2.add(colorPanelFC2);

        paletteToolBar.add(panelC2);

        panelC3.setMaximumSize(new java.awt.Dimension(60, 30));
        panelC3.setMinimumSize(new java.awt.Dimension(60, 30));
        panelC3.setName(""); // NOI18N
        panelC3.setOpaque(false);
        panelC3.setPreferredSize(new java.awt.Dimension(60, 30));

        colorPanelSC3.setToolTipText("stroke color 3");
        colorPanelSC3.setAlignmentX(0.0F);
        colorPanelSC3.setColor(new java.awt.Color(0, 153, 255));
        colorPanelSC3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelSC3MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelSC3Layout = new javax.swing.GroupLayout(colorPanelSC3);
        colorPanelSC3.setLayout(colorPanelSC3Layout);
        colorPanelSC3Layout.setHorizontalGroup(
            colorPanelSC3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelSC3Layout.setVerticalGroup(
            colorPanelSC3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC3.add(colorPanelSC3);

        colorPanelFC3.setToolTipText("fill color 3");
        colorPanelFC3.setAlignmentX(0.0F);
        colorPanelFC3.setColor(null);
        colorPanelFC3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelFC3MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelFC3Layout = new javax.swing.GroupLayout(colorPanelFC3);
        colorPanelFC3.setLayout(colorPanelFC3Layout);
        colorPanelFC3Layout.setHorizontalGroup(
            colorPanelFC3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelFC3Layout.setVerticalGroup(
            colorPanelFC3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC3.add(colorPanelFC3);

        paletteToolBar.add(panelC3);

        panelC4.setMaximumSize(new java.awt.Dimension(60, 30));
        panelC4.setMinimumSize(new java.awt.Dimension(60, 30));
        panelC4.setName(""); // NOI18N
        panelC4.setOpaque(false);
        panelC4.setPreferredSize(new java.awt.Dimension(60, 30));

        colorPanelSC4.setToolTipText("stroke color 4");
        colorPanelSC4.setAlignmentX(0.0F);
        colorPanelSC4.setColor(new java.awt.Color(0, 204, 51));
        colorPanelSC4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelSC4MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelSC4Layout = new javax.swing.GroupLayout(colorPanelSC4);
        colorPanelSC4.setLayout(colorPanelSC4Layout);
        colorPanelSC4Layout.setHorizontalGroup(
            colorPanelSC4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelSC4Layout.setVerticalGroup(
            colorPanelSC4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC4.add(colorPanelSC4);

        colorPanelFC4.setToolTipText("fill color 4");
        colorPanelFC4.setAlignmentX(0.0F);
        colorPanelFC4.setColor(null);
        colorPanelFC4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelFC4MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelFC4Layout = new javax.swing.GroupLayout(colorPanelFC4);
        colorPanelFC4.setLayout(colorPanelFC4Layout);
        colorPanelFC4Layout.setHorizontalGroup(
            colorPanelFC4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelFC4Layout.setVerticalGroup(
            colorPanelFC4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC4.add(colorPanelFC4);

        paletteToolBar.add(panelC4);

        panelC5.setMaximumSize(new java.awt.Dimension(60, 30));
        panelC5.setMinimumSize(new java.awt.Dimension(60, 30));
        panelC5.setName(""); // NOI18N
        panelC5.setOpaque(false);
        panelC5.setPreferredSize(new java.awt.Dimension(60, 30));

        colorPanelSC5.setToolTipText("stroke color 5");
        colorPanelSC5.setAlignmentX(0.0F);
        colorPanelSC5.setColor(new java.awt.Color(255, 102, 0));
        colorPanelSC5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelSC5MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelSC5Layout = new javax.swing.GroupLayout(colorPanelSC5);
        colorPanelSC5.setLayout(colorPanelSC5Layout);
        colorPanelSC5Layout.setHorizontalGroup(
            colorPanelSC5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelSC5Layout.setVerticalGroup(
            colorPanelSC5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC5.add(colorPanelSC5);

        colorPanelFC5.setToolTipText("fill color 5");
        colorPanelFC5.setAlignmentX(0.0F);
        colorPanelFC5.setColor(null);
        colorPanelFC5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelFC5MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelFC5Layout = new javax.swing.GroupLayout(colorPanelFC5);
        colorPanelFC5.setLayout(colorPanelFC5Layout);
        colorPanelFC5Layout.setHorizontalGroup(
            colorPanelFC5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelFC5Layout.setVerticalGroup(
            colorPanelFC5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC5.add(colorPanelFC5);

        paletteToolBar.add(panelC5);

        panelC6.setMaximumSize(new java.awt.Dimension(60, 30));
        panelC6.setMinimumSize(new java.awt.Dimension(60, 30));
        panelC6.setName(""); // NOI18N
        panelC6.setOpaque(false);
        panelC6.setPreferredSize(new java.awt.Dimension(60, 30));

        colorPanelSC6.setToolTipText("stroke color 6");
        colorPanelSC6.setAlignmentX(0.0F);
        colorPanelSC6.setColor(new java.awt.Color(255, 0, 51));
        colorPanelSC6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelSC6MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelSC6Layout = new javax.swing.GroupLayout(colorPanelSC6);
        colorPanelSC6.setLayout(colorPanelSC6Layout);
        colorPanelSC6Layout.setHorizontalGroup(
            colorPanelSC6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelSC6Layout.setVerticalGroup(
            colorPanelSC6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC6.add(colorPanelSC6);

        colorPanelFC6.setToolTipText("fill color 6");
        colorPanelFC6.setAlignmentX(0.0F);
        colorPanelFC6.setColor(null);
        colorPanelFC6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelFC6MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelFC6Layout = new javax.swing.GroupLayout(colorPanelFC6);
        colorPanelFC6.setLayout(colorPanelFC6Layout);
        colorPanelFC6Layout.setHorizontalGroup(
            colorPanelFC6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelFC6Layout.setVerticalGroup(
            colorPanelFC6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC6.add(colorPanelFC6);

        paletteToolBar.add(panelC6);

        panelC7.setMaximumSize(new java.awt.Dimension(60, 30));
        panelC7.setMinimumSize(new java.awt.Dimension(60, 30));
        panelC7.setName(""); // NOI18N
        panelC7.setOpaque(false);
        panelC7.setPreferredSize(new java.awt.Dimension(60, 30));

        colorPanelSC7.setToolTipText("stroke color 7");
        colorPanelSC7.setAlignmentX(0.0F);
        colorPanelSC7.setColor(new java.awt.Color(255, 0, 204));
        colorPanelSC7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelSC7MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelSC7Layout = new javax.swing.GroupLayout(colorPanelSC7);
        colorPanelSC7.setLayout(colorPanelSC7Layout);
        colorPanelSC7Layout.setHorizontalGroup(
            colorPanelSC7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelSC7Layout.setVerticalGroup(
            colorPanelSC7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC7.add(colorPanelSC7);

        colorPanelFC7.setToolTipText("fill color 7");
        colorPanelFC7.setAlignmentX(0.0F);
        colorPanelFC7.setColor(null);
        colorPanelFC7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelFC7MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelFC7Layout = new javax.swing.GroupLayout(colorPanelFC7);
        colorPanelFC7.setLayout(colorPanelFC7Layout);
        colorPanelFC7Layout.setHorizontalGroup(
            colorPanelFC7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelFC7Layout.setVerticalGroup(
            colorPanelFC7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC7.add(colorPanelFC7);

        paletteToolBar.add(panelC7);

        panelC8.setMaximumSize(new java.awt.Dimension(60, 30));
        panelC8.setMinimumSize(new java.awt.Dimension(60, 30));
        panelC8.setName(""); // NOI18N
        panelC8.setOpaque(false);
        panelC8.setPreferredSize(new java.awt.Dimension(60, 30));

        colorPanelSC8.setToolTipText("stroke color 8");
        colorPanelSC8.setAlignmentX(0.0F);
        colorPanelSC8.setColor(new java.awt.Color(102, 0, 204));
        colorPanelSC8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelSC8MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelSC8Layout = new javax.swing.GroupLayout(colorPanelSC8);
        colorPanelSC8.setLayout(colorPanelSC8Layout);
        colorPanelSC8Layout.setHorizontalGroup(
            colorPanelSC8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelSC8Layout.setVerticalGroup(
            colorPanelSC8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC8.add(colorPanelSC8);

        colorPanelFC8.setToolTipText("fill color 8");
        colorPanelFC8.setAlignmentX(0.0F);
        colorPanelFC8.setColor(null);
        colorPanelFC8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colorPanelFC8MousePressed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelFC8Layout = new javax.swing.GroupLayout(colorPanelFC8);
        colorPanelFC8.setLayout(colorPanelFC8Layout);
        colorPanelFC8Layout.setHorizontalGroup(
            colorPanelFC8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        colorPanelFC8Layout.setVerticalGroup(
            colorPanelFC8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panelC8.add(colorPanelFC8);

        paletteToolBar.add(panelC8);

        javax.swing.GroupLayout drawPanelLayout = new javax.swing.GroupLayout(drawPanel);
        drawPanel.setLayout(drawPanelLayout);
        drawPanelLayout.setHorizontalGroup(
            drawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawPanelLayout.createSequentialGroup()
                .addComponent(mainToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 669, Short.MAX_VALUE)
                .addComponent(paletteToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        drawPanelLayout.setVerticalGroup(
            drawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(paletteToolBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(drawPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(drawPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void drawPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawPanelMousePressed
        
        if ( SwingUtilities.isLeftMouseButton( evt ) ) {

            xPressed = evt.getX();
            yPressed = evt.getY();

            // detecting interceptions
            List<Shape> shapes = drawPanel.getShapes();
            ListIterator<Shape> li = shapes.listIterator( shapes.size() );

            while ( li.hasPrevious() ) {

                Shape shape = li.previous();

                if ( shape.intercepts( xPressed, yPressed ) ) {
                    selectedShape = shape;
                    break;
                }

            }

            if ( btnMove.isSelected() ) {

                if ( selectedShape != null ) {
                    xPrev = xPressed;
                    yPrev = yPressed;
                }

            } else if ( btnChangeFill.isSelected() ) {

                if ( selectedShape != null ) {
                    selectedShape.setStrokeColor( colorPanelStroke.getColor() );
                    selectedShape.setFillColor( colorPanelFill.getColor() );
                    selectedShape.setStrokeWidth( dConfig.getStrokeWidth() );
                }

            } else {

                if ( btnPencil.isSelected() ) {
                    if ( currentShape == null ) {
                        Curve c = new Curve();
                        c.addX( xPressed );
                        c.addY( yPressed );
                        currentShape = c;
                    }
                }

                drawing = true;

            }

            drawPanel.repaint();
        
        }
        
    }//GEN-LAST:event_drawPanelMousePressed

    private void drawPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawPanelMouseReleased
        
        if ( SwingUtilities.isLeftMouseButton( evt ) ) {
            
            drawing = false;
            selectedShape = null;

            if ( currentShape != null ) {

                drawPanel.setTempShape( null );
                drawPanel.addShape( currentShape );
                drawPanel.repaint();

                currentShape = null;
                
                drawPanel.resetRedoList();

            }

            verifyHistory();
            
        }
        
    }//GEN-LAST:event_drawPanelMouseReleased

    private void drawPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawPanelMouseDragged
        
        if ( SwingUtilities.isLeftMouseButton( evt ) && drawing ) {
            
            if ( btnPencil.isSelected() ) {

                Curve curve;

                if ( currentShape != null && currentShape instanceof Curve ) {
                    curve = (Curve) currentShape;
                } else {
                    curve = new Curve();
                }

                curve.setStrokeColor( colorPanelStroke.getColor() );
                curve.setFillColor( colorPanelFill.getColor() );

                curve.setStrokeWidth( dConfig.getStrokeWidth() );

                curve.addX( evt.getX() );
                curve.addY( evt.getY() );

                currentShape = curve;

            } else if ( btnLine.isSelected() ) {

                Line line = new Line();

                line.setStrokeColor( colorPanelStroke.getColor() );

                line.setStrokeWidth( dConfig.getStrokeWidth() );
                line.setXStart( xPressed );
                line.setYStart( yPressed );
                line.setXEnd( evt.getX() );
                line.setYEnd( evt.getY() );

                currentShape = line;

            } else if ( btnRectangle.isSelected() ) {

                Rectangle rectangle = new Rectangle();

                rectangle.setStrokeColor( colorPanelStroke.getColor() );
                rectangle.setFillColor( colorPanelFill.getColor() );

                rectangle.setStrokeWidth( dConfig.getStrokeWidth() );

                if ( xPressed < evt.getX() ) {
                    rectangle.setXStart( xPressed );
                    rectangle.setXEnd( evt.getX() );
                } else {
                    rectangle.setXStart( evt.getX() );
                    rectangle.setXEnd( xPressed );
                }

                if ( yPressed < evt.getY() ) {
                    rectangle.setYStart( yPressed );
                    rectangle.setYEnd( evt.getY() );
                } else {
                    rectangle.setYStart( evt.getY() );
                    rectangle.setYEnd( yPressed );
                }

                currentShape = rectangle;

            } else if ( btnRoundRectangle.isSelected() ) {

                RoundRectangle rectangle = new RoundRectangle();

                rectangle.setStrokeColor( colorPanelStroke.getColor() );
                rectangle.setFillColor( colorPanelFill.getColor() );

                rectangle.setStrokeWidth( dConfig.getStrokeWidth() );
                rectangle.setArcRadius( dConfig.getArcRadius() );

                if ( xPressed < evt.getX() ) {
                    rectangle.setXStart( xPressed );
                    rectangle.setXEnd( evt.getX() );
                } else {
                    rectangle.setXStart( evt.getX() );
                    rectangle.setXEnd( xPressed );
                }

                if ( yPressed < evt.getY() ) {
                    rectangle.setYStart( yPressed );
                    rectangle.setYEnd( evt.getY() );
                } else {
                    rectangle.setYStart( evt.getY() );
                    rectangle.setYEnd( yPressed );
                }

                currentShape = rectangle;

            } else if ( btnEllipse.isSelected() ) {

                Ellipse ellipse = new Ellipse();

                ellipse.setStrokeColor( colorPanelStroke.getColor() );
                ellipse.setFillColor( colorPanelFill.getColor() );

                ellipse.setStrokeWidth( dConfig.getStrokeWidth() );

                if ( xPressed < evt.getX() ) {
                    ellipse.setXStart( xPressed );
                    ellipse.setXEnd( evt.getX() );
                } else {
                    ellipse.setXStart( evt.getX() );
                    ellipse.setXEnd( xPressed );
                }

                if ( yPressed < evt.getY() ) {
                    ellipse.setYStart( yPressed );
                    ellipse.setYEnd( evt.getY() );
                } else {
                    ellipse.setYStart( evt.getY() );
                    ellipse.setYEnd( yPressed );
                }

                currentShape = ellipse;

            } else if ( btnPolygon.isSelected() ) {

                Polygon polygon = new Polygon();

                polygon.setStrokeColor( colorPanelStroke.getColor() );
                polygon.setFillColor( colorPanelFill.getColor() );

                polygon.setStrokeWidth( dConfig.getStrokeWidth() );
                polygon.setSideQuantity( dConfig.getSideQuantity() );

                double c1 = evt.getX() - xPressed;
                double c2 = evt.getY() - yPressed;

                polygon.setRadius( Math.sqrt( c1*c1 + c2*c2 ) );
                polygon.setXCenter( xPressed );
                polygon.setYCenter( yPressed );
                
                polygon.setAngle( Math.toDegrees( Math.atan2( c2, c1 ) ) );

                currentShape = polygon;

            } else if ( btnStar.isSelected() ) {

                Star star = new Star();

                star.setStrokeColor( colorPanelStroke.getColor() );
                star.setFillColor( colorPanelFill.getColor() );

                star.setStrokeWidth( dConfig.getStrokeWidth() );
                star.setSideQuantity( dConfig.getSideQuantity() );

                double c1 = evt.getX() - xPressed;
                double c2 = evt.getY() - yPressed;

                star.setRadius( Math.sqrt( c1*c1 + c2*c2 ) );
                star.setXCenter( xPressed );
                star.setYCenter( yPressed );

                star.setAngle( Math.toDegrees( Math.atan2( c2, c1 ) ) );

                currentShape = star;

            }

            drawPanel.setTempShape( currentShape );
            drawPanel.repaint();

        } else if ( btnMove.isSelected() && selectedShape != null ) {

            selectedShape.move( evt.getX() - xPrev, evt.getY() - yPrev );

            xPrev = evt.getX();
            yPrev = evt.getY();

            drawPanel.repaint();
        
        }
        
    }//GEN-LAST:event_drawPanelMouseDragged

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        
        dConfig.setProcessEventsMainWindow( false );
        if ( JOptionPane.showConfirmDialog( this, 
                "Really quit?", "Quit?", JOptionPane.YES_NO_OPTION ) == JOptionPane.YES_OPTION ) {
            System.exit( 0 );
        }
        dConfig.setProcessEventsMainWindow( true );
        
    }//GEN-LAST:event_btnQuitActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        
        dConfig.setProcessEventsMainWindow( false );
        
        if ( JOptionPane.showConfirmDialog( this, "All unsaved data will be lost.\nContinue?", "New", JOptionPane.YES_NO_OPTION ) == JOptionPane.YES_OPTION ) {
            drawPanel.reset();
            drawPanel.setBackgroundColor( colorPanelBackground.getColor() );
            drawPanel.repaint();
            verifyHistory();
        }
        
        dConfig.setProcessEventsMainWindow( true );
        
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        
        dConfig.setProcessEventsMainWindow( false );
        
        try {
            
            JFileChooser jfc = new JFileChooser();
            jfc.setMultiSelectionEnabled( false );
            jfc.setFileFilter( new FileNameExtensionFilter( "Computer Supported Class Helper File", "csch" ) );
            
            if ( jfc.showOpenDialog( this ) == JFileChooser.APPROVE_OPTION ) {
                File f = jfc.getSelectedFile();
                ObjectInputStream i = new ObjectInputStream( new FileInputStream( f ) );
                drawPanel.loadDrawPagesFromOutside( i.readObject() );
                i.close();
                drawPanel.repaint();
                verifyHistory();
            }
            
        } catch ( IOException | ClassNotFoundException exc ) {
            exc.printStackTrace();
        }
        
        dConfig.setProcessEventsMainWindow( true );
        
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        dConfig.setProcessEventsMainWindow( false );
        
        try {
            
            JFileChooser jfc = new JFileChooser();
            jfc.setMultiSelectionEnabled( false );
            jfc.setFileFilter( new FileNameExtensionFilter( "Computer Supported Class Helper File", "csch" ) );
            
            if ( jfc.showSaveDialog( this ) == JFileChooser.APPROVE_OPTION ) {
                File f = jfc.getSelectedFile();
                if ( !f.getName().endsWith( ".csch" ) ) {
                    f = new File( f.getAbsolutePath() + ".csch" );
                }
                ObjectOutputStream o = new ObjectOutputStream( new FileOutputStream( f ) );
                o.writeObject( drawPanel.getDrawPages() );
                o.close();
            }
            
        } catch ( IOException exc ) {
            exc.printStackTrace();
        }
        
        dConfig.setProcessEventsMainWindow( true );
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoActionPerformed
        
        if ( drawPanel.isAbleToUndo() ) {
            drawPanel.undo();
            drawPanel.repaint();
        }
        
        verifyHistory();
        
    }//GEN-LAST:event_btnUndoActionPerformed

    private void btnRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedoActionPerformed
        
        if ( drawPanel.isAbleToRedo() ) {
            drawPanel.redo();
            drawPanel.repaint();
        }
        
        verifyHistory();
        
    }//GEN-LAST:event_btnRedoActionPerformed

    private void colorPanelStrokeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelStrokeMousePressed
        setColorOnColorPanel( evt, colorPanelStroke, "Stroke Color" );
    }//GEN-LAST:event_colorPanelStrokeMousePressed

    private void colorPanelFillMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelFillMousePressed
        setColorOnColorPanel( evt, colorPanelFill, "Fill Color" );
    }//GEN-LAST:event_colorPanelFillMousePressed

    private void colorPanelBackgroundMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelBackgroundMousePressed
        
        if ( SwingUtilities.isLeftMouseButton( evt ) ) {
            
            Color c = JColorChooser.showDialog( this, "Background Color", colorPanelBackground.getColor() );
            if ( c != null ) {
                
                // alpha verification
                if ( c.getAlpha() == 0 ) {
                    c = new Color( c.getRed(), c.getGreen(), c.getBlue(), 1 );
                }
                
                colorPanelBackground.setColor( c );
                drawPanel.setBackgroundColor( c );
                colorPanelBackground.repaint();
                drawPanel.repaint();
                
            }
            
        } else if ( SwingUtilities.isRightMouseButton( evt ) ) {
            popupMenuNoColor.show( evt.getComponent(), evt.getX(), evt.getY() );
        }
        
    }//GEN-LAST:event_colorPanelBackgroundMousePressed

    private void menuItemNoColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemNoColorActionPerformed
        
        ColorPanel cp = (ColorPanel) popupMenuNoColor.getInvoker();
        cp.setColor( null );
        cp.repaint();
        
        if ( cp == colorPanelBackground ) {
            drawPanel.setBackgroundColor( Constants.TRANSPARENT_COLOR );
            drawPanel.repaint();
        }
        
    }//GEN-LAST:event_menuItemNoColorActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHelpActionPerformed

    private void colorPanelSC1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelSC1MousePressed
        setColorOnColorPanel( evt, colorPanelSC1, "Stroke Color 1" );
    }//GEN-LAST:event_colorPanelSC1MousePressed

    private void colorPanelFC1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelFC1MousePressed
        setColorOnColorPanel( evt, colorPanelFC1, "Fill Color 1" );
    }//GEN-LAST:event_colorPanelFC1MousePressed

    private void colorPanelSC2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelSC2MousePressed
        setColorOnColorPanel( evt, colorPanelSC2, "Stroke Color 2" );
    }//GEN-LAST:event_colorPanelSC2MousePressed

    private void colorPanelFC2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelFC2MousePressed
        setColorOnColorPanel( evt, colorPanelFC2, "Fill Color 2" );
    }//GEN-LAST:event_colorPanelFC2MousePressed

    private void colorPanelSC3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelSC3MousePressed
        setColorOnColorPanel( evt, colorPanelSC3, "Stroke Color 3" );
    }//GEN-LAST:event_colorPanelSC3MousePressed

    private void colorPanelFC3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelFC3MousePressed
        setColorOnColorPanel( evt, colorPanelFC3, "Fill Color 3" );
    }//GEN-LAST:event_colorPanelFC3MousePressed

    private void colorPanelSC4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelSC4MousePressed
        setColorOnColorPanel( evt, colorPanelSC4, "Stroke Color 4" );
    }//GEN-LAST:event_colorPanelSC4MousePressed

    private void colorPanelFC4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelFC4MousePressed
        setColorOnColorPanel( evt, colorPanelFC4, "Fill Color 4" );
    }//GEN-LAST:event_colorPanelFC4MousePressed

    private void colorPanelSC5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelSC5MousePressed
        setColorOnColorPanel( evt, colorPanelSC5, "Stroke Color 5" );
    }//GEN-LAST:event_colorPanelSC5MousePressed

    private void colorPanelFC5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelFC5MousePressed
        setColorOnColorPanel( evt, colorPanelFC5, "Fill Color 5" );
    }//GEN-LAST:event_colorPanelFC5MousePressed

    private void colorPanelSC6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelSC6MousePressed
        setColorOnColorPanel( evt, colorPanelSC6, "Stroke Color 6" );
    }//GEN-LAST:event_colorPanelSC6MousePressed

    private void colorPanelFC6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelFC6MousePressed
        setColorOnColorPanel( evt, colorPanelFC6, "Fill Color 6" );
    }//GEN-LAST:event_colorPanelFC6MousePressed

    private void btnPaletteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaletteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPaletteActionPerformed

    private void btnPencilMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPencilMouseReleased
        openNewToolConfigDialogStrokeWidth( evt );
    }//GEN-LAST:event_btnPencilMouseReleased

    private void btnLineMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLineMouseReleased
        openNewToolConfigDialogStrokeWidth( evt );
    }//GEN-LAST:event_btnLineMouseReleased

    private void btnRectangleMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRectangleMouseReleased
        openNewToolConfigDialogStrokeWidth( evt );
    }//GEN-LAST:event_btnRectangleMouseReleased

    private void btnRoundRectangleMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRoundRectangleMouseReleased
        openNewToolConfigDialogStrokeWidthArcRadius( evt );
    }//GEN-LAST:event_btnRoundRectangleMouseReleased

    private void btnPolygonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPolygonMouseReleased
        openNewToolConfigDialogStrokeWidthSideQuantity( evt );
    }//GEN-LAST:event_btnPolygonMouseReleased

    private void btnStarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStarMouseReleased
        openNewToolConfigDialogStrokeWidthSideQuantity( evt );
    }//GEN-LAST:event_btnStarMouseReleased

    private void btnEllipseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEllipseMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEllipseMouseReleased

    private void btnPrintScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintScreenActionPerformed
        
        dConfig.setProcessEventsMainWindow( false );
        
        try {
            
            Robot r = new Robot();
            BufferedImage bi = r.createScreenCapture( new java.awt.Rectangle( getWidth(), getHeight() ) );
            
            JFileChooser jfc = new JFileChooser();
            jfc.setMultiSelectionEnabled( false );
            jfc.setFileFilter( new FileNameExtensionFilter( "Portable Network Graphics", "png" ) );
            
            if ( jfc.showSaveDialog( this ) == JFileChooser.APPROVE_OPTION ) {
                File f = jfc.getSelectedFile();
                if ( !f.getName().endsWith( ".png" ) ) {
                    f = new File( f.getAbsolutePath() + ".png" );
                }
                ImageIO.write( bi, "png", f );
            }
            
        } catch ( AWTException | IOException exc ) {
            exc.printStackTrace();
        }
        
        dConfig.setProcessEventsMainWindow( true );
        
    }//GEN-LAST:event_btnPrintScreenActionPerformed

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        
        dConfig.setProcessEventsMainWindow( false );
        if ( JOptionPane.showConfirmDialog( 
                this, 
                "Clean the current draw page?", "Clear current draw page", 
                JOptionPane.YES_NO_OPTION ) == JOptionPane.YES_OPTION ) {
            drawPanel.clearCurrentDrawPage();
            drawPanel.repaint();
        }
        dConfig.setProcessEventsMainWindow( true );
        
    }//GEN-LAST:event_btnCleanActionPerformed

    private void btnPencilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPencilActionPerformed
        drawPanel.setCursor( Cursors.getCursor( Cursors.Type.PENCIL ) );
    }//GEN-LAST:event_btnPencilActionPerformed

    private void btnLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLineActionPerformed
        drawPanel.setCursor( Cursors.getCursor( Cursors.Type.CROSS ) );
    }//GEN-LAST:event_btnLineActionPerformed

    private void btnRectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRectangleActionPerformed
        drawPanel.setCursor( Cursors.getCursor( Cursors.Type.CROSS ) );
    }//GEN-LAST:event_btnRectangleActionPerformed

    private void btnRoundRectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRoundRectangleActionPerformed
        drawPanel.setCursor( Cursors.getCursor( Cursors.Type.CROSS ) );
    }//GEN-LAST:event_btnRoundRectangleActionPerformed

    private void btnEllipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEllipseActionPerformed
        drawPanel.setCursor( Cursors.getCursor( Cursors.Type.CROSS ) );
    }//GEN-LAST:event_btnEllipseActionPerformed

    private void btnPolygonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPolygonActionPerformed
        drawPanel.setCursor( Cursors.getCursor( Cursors.Type.CROSS ) );
    }//GEN-LAST:event_btnPolygonActionPerformed

    private void btnStarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStarActionPerformed
        drawPanel.setCursor( Cursors.getCursor( Cursors.Type.CROSS ) );
    }//GEN-LAST:event_btnStarActionPerformed

    private void btnMoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveActionPerformed
        drawPanel.setCursor( Cursors.getCursor( Cursors.Type.MOVE ) );
    }//GEN-LAST:event_btnMoveActionPerformed

    private void btnChangeFillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeFillActionPerformed
        drawPanel.setCursor( Cursors.getCursor( Cursors.Type.BUCKET ) );
    }//GEN-LAST:event_btnChangeFillActionPerformed

    private void btnConfigsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfigsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnConfigsActionPerformed

    private void colorPanelSC7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelSC7MousePressed
        setColorOnColorPanel( evt, colorPanelSC7, "Stroke Color 7" );
    }//GEN-LAST:event_colorPanelSC7MousePressed

    private void colorPanelFC7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelFC7MousePressed
        setColorOnColorPanel( evt, colorPanelFC7, "Fill Color 7" );
    }//GEN-LAST:event_colorPanelFC7MousePressed

    private void colorPanelSC8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelSC8MousePressed
        setColorOnColorPanel( evt, colorPanelSC8, "Stroke Color 8" );
    }//GEN-LAST:event_colorPanelSC8MousePressed

    private void colorPanelFC8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelFC8MousePressed
        setColorOnColorPanel( evt, colorPanelFC8, "Fill Color 8" );
    }//GEN-LAST:event_colorPanelFC8MousePressed

    private class ApplicationKeyEventDispatcher implements KeyEventDispatcher {
        
        JFrame mainFrame;

        public ApplicationKeyEventDispatcher( JFrame mainFrame ) {
            this.mainFrame = mainFrame;
        }
        
        @Override
        public boolean dispatchKeyEvent( KeyEvent e ) {
            
            if ( dConfig.isProcessEventsMainWindow() ) {
                
                if ( e.getID() == KeyEvent.KEY_RELEASED ) {

                    if ( e.isShiftDown() ) {

                        switch ( e.getKeyCode() ) {

                            case KeyEvent.VK_ESCAPE:
                                toggleToolBars();
                                break;

                        }

                    } else if ( e.isControlDown() ) {

                        switch ( e.getKeyCode() ) {

                            case KeyEvent.VK_DELETE:
                                if ( drawPanel.canDeleteDrawPage() ) {
                                    dConfig.setProcessEventsMainWindow( false );
                                    if ( JOptionPane.showConfirmDialog( 
                                            mainFrame, 
                                            "Delete the current draw page?", "Delete current draw page", 
                                            JOptionPane.YES_NO_OPTION ) == JOptionPane.YES_OPTION ) {
                                        drawPanel.deleteCurrentDrawPage();
                                        drawPanel.repaint();
                                    }
                                    dConfig.setProcessEventsMainWindow( true );
                                }
                                break;

                        }

                    } else {

                        switch ( e.getKeyCode() ) {

                            case KeyEvent.VK_RIGHT:
                                
                                if ( drawPanel.willCreateNewDrawPage() ) {
                                    dConfig.setProcessEventsMainWindow( false );
                                    if ( JOptionPane.showConfirmDialog( 
                                            mainFrame, 
                                            "Create a new draw page?", "New Draw Page", 
                                            JOptionPane.YES_NO_OPTION ) == JOptionPane.YES_OPTION ) {
                                        drawPanel.nextDrawPage( colorPanelBackground.getColor() );
                                    }
                                    dConfig.setProcessEventsMainWindow( true );
                                } else {
                                    drawPanel.nextDrawPage( colorPanelBackground.getColor() );
                                }
                                
                                drawPanel.repaint();
                                
                                break;

                            case KeyEvent.VK_LEFT:
                                drawPanel.previousDrawPage();
                                drawPanel.repaint();
                                break;

                            case KeyEvent.VK_1:
                            case KeyEvent.VK_NUMPAD1:
                                transferCodeBetweenColorPanels( 
                                        colorPanelSC1, colorPanelFC1, 
                                        colorPanelStroke, colorPanelFill );
                                break;

                            case KeyEvent.VK_2:
                            case KeyEvent.VK_NUMPAD2:
                                transferCodeBetweenColorPanels( 
                                        colorPanelSC2, colorPanelFC2, 
                                        colorPanelStroke, colorPanelFill );
                                break;

                            case KeyEvent.VK_3:
                            case KeyEvent.VK_NUMPAD3:
                                transferCodeBetweenColorPanels( 
                                        colorPanelSC3, colorPanelFC3, 
                                        colorPanelStroke, colorPanelFill );
                                break;

                            case KeyEvent.VK_4:
                            case KeyEvent.VK_NUMPAD4:
                                transferCodeBetweenColorPanels( 
                                        colorPanelSC4, colorPanelFC4, 
                                        colorPanelStroke, colorPanelFill );
                                break;

                            case KeyEvent.VK_5:
                            case KeyEvent.VK_NUMPAD5:
                                transferCodeBetweenColorPanels( 
                                        colorPanelSC5, colorPanelFC5, 
                                        colorPanelStroke, colorPanelFill );
                                break;

                            case KeyEvent.VK_6:
                            case KeyEvent.VK_NUMPAD6:
                                transferCodeBetweenColorPanels( 
                                        colorPanelSC6, colorPanelFC6, 
                                        colorPanelStroke, colorPanelFill );
                                break;
                                
                            case KeyEvent.VK_7:
                            case KeyEvent.VK_NUMPAD7:
                                transferCodeBetweenColorPanels( 
                                        colorPanelSC7, colorPanelFC7, 
                                        colorPanelStroke, colorPanelFill );
                                break;
                                
                            case KeyEvent.VK_8:
                            case KeyEvent.VK_NUMPAD8:
                                transferCodeBetweenColorPanels( 
                                        colorPanelSC8, colorPanelFC8, 
                                        colorPanelStroke, colorPanelFill );
                                break;

                        }

                    }

                }
                
            }
            
            return false;
            
        }
        
    }
    
    private void toggleToolBars() {
        mainToolBar.setVisible( !mainToolBar.isVisible() );
        paletteToolBar.setVisible( !paletteToolBar.isVisible() );
    }
    
    private void setColorOnColorPanel( MouseEvent evt, ColorPanel colorPanel, String dialogTitle ) {
        
        if ( SwingUtilities.isLeftMouseButton( evt ) ) {
            Color c = JColorChooser.showDialog( this, dialogTitle, colorPanel.getColor() );
            if ( c != null ) {
                colorPanel.setColor( c );
                colorPanel.repaint();
            }
        } else if ( SwingUtilities.isRightMouseButton( evt ) ) {
            popupMenuNoColor.show( evt.getComponent(), evt.getX(), evt.getY() );
        }
        
    }
    
    private void transferCodeBetweenColorPanels( 
            ColorPanel sourceStroke, 
            ColorPanel sourceFill, 
            ColorPanel targetStroke, 
            ColorPanel targetFill ) {
        
        targetStroke.setColor( sourceStroke.getColor() );
        targetFill.setColor( sourceFill.getColor() );
        
        targetStroke.repaint();
        targetFill.repaint();
        
    }
    
    private void openNewToolConfigDialogStrokeWidth( MouseEvent evt ) {
        
        if ( SwingUtilities.isRightMouseButton( evt ) ) {
            
            ToolConfigDialogStrokeWidth tcd = new ToolConfigDialogStrokeWidth( this, true );
            Point loc = evt.getLocationOnScreen();
            tcd.setLocation( loc.x, loc.y - 20 );
            tcd.setVisible( true );
            
        }
        
    }
    
    private void openNewToolConfigDialogStrokeWidthSideQuantity( MouseEvent evt ) {
        
        if ( SwingUtilities.isRightMouseButton( evt ) ) {
            
            ToolConfigDialogStrokeWidthSideQuantity tcd = new ToolConfigDialogStrokeWidthSideQuantity( this, true );
            Point loc = evt.getLocationOnScreen();
            tcd.setLocation( loc.x, loc.y - 40 );
            tcd.setVisible( true );
            
        }
        
    }
    
    private void openNewToolConfigDialogStrokeWidthArcRadius( MouseEvent evt ) {
        
        if ( SwingUtilities.isRightMouseButton( evt ) ) {
            
            ToolConfigDialogStrokeWidthArcRadius tcd = new ToolConfigDialogStrokeWidthArcRadius( this, true );
            Point loc = evt.getLocationOnScreen();
            tcd.setLocation( loc.x, loc.y - 40 );
            tcd.setVisible( true );
            
        }
        
    }
    
    private void verifyHistory() {
        
        if ( drawPanel.isAbleToUndo() ) {
            btnUndo.setEnabled( true );
        } else {
            btnUndo.setEnabled( false );
        }
        
        if ( drawPanel.isAbleToRedo() ) {
            btnRedo.setEnabled( true );
        } else {
            btnRedo.setEnabled( false );
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main( String args[] ) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() ) {
                if ( "Nimbus".equals( info.getName() ) ) {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        } catch ( ClassNotFoundException ex ) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( InstantiationException ex ) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( IllegalAccessException ex ) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( javax.swing.UnsupportedLookAndFeelException ex ) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible( true );
            }
        } );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnChangeFill;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnConfigs;
    private javax.swing.JToggleButton btnEllipse;
    private javax.swing.JButton btnHelp;
    private javax.swing.JToggleButton btnLine;
    private javax.swing.JToggleButton btnMove;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnPalette;
    private javax.swing.JToggleButton btnPencil;
    private javax.swing.JToggleButton btnPolygon;
    private javax.swing.JButton btnPrintScreen;
    private javax.swing.JButton btnQuit;
    private javax.swing.JToggleButton btnRectangle;
    private javax.swing.JButton btnRedo;
    private javax.swing.JToggleButton btnRoundRectangle;
    private javax.swing.JButton btnSave;
    private javax.swing.JToggleButton btnStar;
    private javax.swing.JButton btnUndo;
    private javax.swing.ButtonGroup buttonGroup;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelBackground;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelFC1;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelFC2;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelFC3;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelFC4;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelFC5;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelFC6;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelFC7;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelFC8;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelFill;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelSC1;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelSC2;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelSC3;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelSC4;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelSC5;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelSC6;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelSC7;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelSC8;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.ColorPanel colorPanelStroke;
    private br.com.davidbuzatto.computersupportedclasshelper.gui.DrawPanel drawPanel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.Box.Filler filler8;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JToolBar mainToolBar;
    private javax.swing.JMenuItem menuItemNoColor;
    private javax.swing.JToolBar paletteToolBar;
    private javax.swing.JPanel panelC1;
    private javax.swing.JPanel panelC2;
    private javax.swing.JPanel panelC3;
    private javax.swing.JPanel panelC4;
    private javax.swing.JPanel panelC5;
    private javax.swing.JPanel panelC6;
    private javax.swing.JPanel panelC7;
    private javax.swing.JPanel panelC8;
    private javax.swing.JPopupMenu popupMenuNoColor;
    // End of variables declaration//GEN-END:variables
}
